/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package at.htlkaindorf.ahif18.gui;

import at.htlkaindorf.ahif18.data.Event;
import at.htlkaindorf.ahif18.data.EventModel;
import at.htlkaindorf.ahif18.db.DBAccess;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.TitledBorder;

/**
 *
 * @author mjuri
 */
public class PlannerGUI extends javax.swing.JFrame {

    private EventModel eventModel = new EventModel();
    private DBAccess db = null;

    private String[] filters = {"All", "Unfinished", "Done"};
    private int filterIndex = 0;

    /**
     * Creates new form PlannerGUI
     */
    public PlannerGUI() {
        try {
            this.db = new DBAccess();
            initComponents();
            lstEvents.setModel(eventModel);
            lstEvents.setCellRenderer(new EventItemRenderer());
            setFilter();
        } catch (Exception ex) {
            Logger.getLogger(PlannerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Testing below -----------
        if (true) {
            LocalDateTime lt = LocalDateTime.now();
            db.clearEvents();
            db.insertEvent(new Event("Overdue Soon", "MonkaW", lt.plusSeconds(30), true, false));
            db.insertEvent(new Event("Some time left", "UwU", lt.plusMinutes(5), true, false));
            db.insertEvent(new Event("Done", "Diese Ãœbung war sehr anstrengend", lt.minusMinutes(5), true, true));
        }

        eventModel.loadEvents(db.getAllEvents());
    }

    private void setFilter() {
        TitledBorder border = (TitledBorder) pnlEvents.getBorder();
        border.setTitle(filters[filterIndex]);
        eventModel.filter(filters[filterIndex]);
        pnlEvents.updateUI();
    }

    public void eventAdded(Event event) {
        eventModel.addEvent(event);
        eventModel.filter(filters[filterIndex]);
        db.insertEvent(event);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmeEvents = new javax.swing.JPopupMenu();
        switchFilter = new javax.swing.JMenuItem();
        markDone = new javax.swing.JMenuItem();
        pnlEvents = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstEvents = new javax.swing.JList<>();
        pnlDetails = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtDone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtManual = new javax.swing.JTextField();
        onAddEvent = new javax.swing.JButton();

        cmeEvents.setComponentPopupMenu(cmeEvents);

        switchFilter.setText("Switch Filter");
        switchFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSwitchFilter(evt);
            }
        });
        cmeEvents.add(switchFilter);

        markDone.setText("Toggle Status");
        markDone.setToolTipText("");
        markDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMarkDoneEvents(evt);
            }
        });
        cmeEvents.add(markDone);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Planner");

        pnlEvents.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "error :(", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lstEvents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEvents.setComponentPopupMenu(cmeEvents);
        lstEvents.setInheritsPopupMenu(true);
        lstEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onShowDetails(evt);
            }
        });
        jScrollPane1.setViewportView(lstEvents);

        javax.swing.GroupLayout pnlEventsLayout = new javax.swing.GroupLayout(pnlEvents);
        pnlEvents.setLayout(pnlEventsLayout);
        pnlEventsLayout.setHorizontalGroup(
            pnlEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlEventsLayout.setVerticalGroup(
            pnlEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Title");

        txtTitle.setEditable(false);

        txtDescription.setEditable(false);
        jScrollPane2.setViewportView(txtDescription);

        jLabel2.setText("Description");

        jLabel3.setText("Date");

        txtDate.setEditable(false);

        txtDone.setEditable(false);

        jLabel4.setText("Done");

        jLabel5.setText("Manual");

        txtManual.setEditable(false);

        javax.swing.GroupLayout pnlDetailsLayout = new javax.swing.GroupLayout(pnlDetails);
        pnlDetails.setLayout(pnlDetailsLayout);
        pnlDetailsLayout.setHorizontalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitle))
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDone, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(txtManual)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDate)))
                .addContainerGap())
        );
        pnlDetailsLayout.setVerticalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtManual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        onAddEvent.setText("Add Event");
        onAddEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddEvent(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(onAddEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(pnlEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onAddEvent))
                    .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void onSwitchFilter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSwitchFilter
        filterIndex = (filterIndex + 1) % filters.length;
        setFilter();
    }//GEN-LAST:event_onSwitchFilter

    private void onMarkDoneEvents(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onMarkDoneEvents
        lstEvents.getSelectedValuesList().forEach(Event::markDone);
        eventModel.filter(filters[filterIndex]);
        // i want a propertyChanged, and thats a quick way to do it
    }//GEN-LAST:event_onMarkDoneEvents

    private void onShowDetails(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onShowDetails
        Event event = lstEvents.getSelectedValue();
        if (event != null) {
            txtTitle.setText(event.getName());
            txtDescription.setText(event.getDescription());
            txtDate.setText(event.getDateString());
            txtDone.setText(event.isDoneString());
            txtManual.setText(event.isManualString());
        }
    }//GEN-LAST:event_onShowDetails

    private void onAddEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddEvent
        AddEvent dialog = new AddEvent(this, true, this);
        dialog.setVisible(true);
    }//GEN-LAST:event_onAddEvent

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlannerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlannerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu cmeEvents;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Event> lstEvents;
    private javax.swing.JMenuItem markDone;
    private javax.swing.JButton onAddEvent;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlEvents;
    private javax.swing.JMenuItem switchFilter;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextPane txtDescription;
    private javax.swing.JTextField txtDone;
    private javax.swing.JTextField txtManual;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables

    private Object LocalDateTime() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
